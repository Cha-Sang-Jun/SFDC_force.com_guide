<apex:page controller="CntrlVfCallJs" sidebar="false" renderAs="pdf">

    <script type="text/javascript">
        function callApexVarMethod(){
            // Visualforce에 지정한 Apex 변수를 javascript 내에서 습득(apex:inputHidden 에 지정한 id속성으로 대상을 지정)
            var myVar = document.getElementById('{!$Component.form.myVar}').value = 'Bye World';
            // 역으로, Apex 변수의 내용을 변경하는 것도 가능
            // document.getElementById('{!$Component.form.myVar}').value = 'Bye World';

            // Apex 메서드 실행(apex:actionFunction 에 지정한 name 속성으로 대상을 지정)
            myMethod();
        }
    </script>

    <script type="text/javascript">
        function checkConfirm(){
            if(confirm('javascirpt 호출 테스트')){
                return true;
            }

            return false;
        }
    </script>

    <apex:form id="form">
        <!-- 화면 메세지 표시란 -->
        <apex:pageMessages id="messagearea" showDetail="false" />

        <!-- Apex 변수 지정 -->
        <apex:inputHidden id="myVar" value="{!myVariable}" />
        <!-- Apex 메서드 지정 -->
        <apex:actionFunction name="myMethod" action="{!myMethod}" />

        <apex:pageBlock title="Apex 변수 및 메소드 호출" >
            <!-- 화면 메세지 표시란 -->
            <apex:pageMessages id="messagearea" showDetail="false" />

            <apex:commandButton value="JS호출" oncomplete="callApexVarMethod()" />
        </apex:pageBlock>

        <!-- javascript 호출용 버튼 -->
        <apex:commandButton value="JS 호출" onclick="checkConfirm()" />

        <!-- 아래의 방법으로도 javascript 코드 실행 가능 -->
        <!-- <apex:commandButton value="JS호출" onclick="if(confirm('javascript 호출 테스트')){return true;}; return false;" /> -->
    </apex:form>
</apex:page>